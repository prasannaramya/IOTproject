#include <LiquidCrystal.h>
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);
#include <SoftwareSerial.h>
#define light1  8
#define light2  11
#define light3  A3
#define light4  A4
#define ir1  A0
#define ir2  A1
#define ldr  A2
#define RX 9
#define TX 10
int ir1_value;
int ir2_value;
int ldr_value;
String AP = "elegant";       // AP NAME
String PASS = "smartwork"; // AP PASSWORD
String API = "833FE185G1XEQY3E";   // Write API KEY 9EWU4V8S8ECXFQUX
String HOST = "api.thingspeak.com";
String PORT = "80";
int countTrueCommand;
int countTimeCommand; 
boolean found = false; 
  
SoftwareSerial esp8266(RX,TX); 
  
void setup() {
  lcd.begin(16, 2);
  lcd.clear();
  lcd.print("IOT SMART STREET");
  lcd.setCursor(0, 1);  lcd.print("LIGHT MONITORING");
  pinMode(light1,OUTPUT);
  pinMode(light2,OUTPUT);
  pinMode(light3,OUTPUT);
  pinMode(light4,OUTPUT);
  pinMode(ir1,INPUT);
  pinMode(ir2,INPUT);
  pinMode(ldr,INPUT);
  delay(1000);
  Serial.begin(9600);
  esp8266.begin(115200);
  sendCommand("AT",5,"OK");
  sendCommand("AT+CWMODE=1",5,"OK");
  sendCommand("AT+CWJAP=\""+ AP +"\",\""+ PASS +"\"",20,"OK");
}

void loop() {
  
 String getData = "GET /update?api_key="+ API +"&field1="+getir1()+"&field2="+getir2();
 sendCommand("AT+CIPMUX=1",5,"OK");
 sendCommand("AT+CIPSTART=0,\"TCP\",\""+ HOST +"\","+ PORT,15,"OK");
 
 sendCommand("AT+CIPSEND=0," +String(getData.length()+4),4,">");
 esp8266.println(getData);delay(1500);countTrueCommand++;
 sendCommand("AT+CIPCLOSE=0",5,"OK");

}

String getir1() 
{
  ir1_value=digitalRead(ir1);
  ldr_value=digitalRead(ldr);
  
  if(ir1_value==LOW&&ldr_value==HIGH) 
  {
    digitalWrite(light1,HIGH);
    digitalWrite(light2,HIGH);
   
  }

  else
  {
  digitalWrite(light1,LOW);
  digitalWrite(light2,LOW);
  }
  return String(ir1_value);
  delay(200);
}

String getir2() 
{

  ir2_value=digitalRead(ir2);
  ldr_value=digitalRead(ldr);
  if(ir2_value==LOW&&ldr_value==HIGH) 
  {
    digitalWrite(light3,HIGH);
    digitalWrite(light4,HIGH);
   
  }

  else
  {
  digitalWrite(light3,LOW);
  digitalWrite(light4,LOW);
  }
  return String(ir2_value);
  delay(200);
}


void sendCommand(String command, int maxTime, char readReplay[]) {
  Serial.print(countTrueCommand);
  Serial.print(". at command => ");
  Serial.print(command);
  Serial.print(" ");
  while(countTimeCommand < (maxTime*1))
  {
    esp8266.println(command);//at+cipsend
    if(esp8266.find(readReplay))//ok
    {
      found = true;
      break;
    }
  
    countTimeCommand++;
  }
  
  if(found == true)
  {
    Serial.println("OYI");
    countTrueCommand++;
    countTimeCommand = 0;
  }
  
  if(found == false)
  {
    Serial.println("Fail");
    countTrueCommand = 0;
    countTimeCommand = 0;
  }
  
  found = false;
 }
